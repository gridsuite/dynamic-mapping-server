server:
  port: 5036
  forward-headers-strategy: framework

spring:
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 103MB

  datasource:
    url: ${dbUrl}
    username: ${login}
    password: ${password}

  jpa:
    database: POSTGRESQL
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
    properties:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      hibernate:
        event:
          merge:
            entity_copy_observer: allow
        format_sql: true
        # Used when action: create is uncommented
        hbm2ddl:
          delimiter: ;
      # Uncomment action to automatically generate the database sql schema file
      javax:
        persistence:
          schema-generation:
            scripts:
              # action: create
              create-target: src/main/resources/mappings.sql
              create-source: metadata

logging:
  level:
    ROOT: INFO


backing-services:
  case:
    base-uri: http://localhost:5000
  network-conversion:
    base-uri: http://localhost:5003

network-store-server:
  preloading-strategy: COLLECTION
  base-uri: http://localhost:8080/

# this structure is shared among all microservices, if you change it, change it everywhere.
# customQuery allows a microservice to set query parameters specific to itself.
# if customQuery is empty, set queryBegin to "?", otherwise set it to "&".
# this allow the user to add additional query elements common to all microservices
# and to use the appropriate leading character depending on whether the microsevice
# uses custom query parameters or not. customQueryBegin in this file must always be '?',
# it is present only to be able to be overriden by deployments in the
# manyschemas mode. It is used only for microservices that have predefined
# query parameters, and it must be used if customQuery is not empty, otherwise
# the manyschema mode doesn't work, so define it everywhere because it doesn't
# hurt.
queryBegin: '?'
customQueryBegin: '?'
customQuery:
dbName: dynamicmappings
dbApi: jdbc

